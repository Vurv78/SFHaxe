// Generated by SFHaxe 0.2.0
package sf.type;
extern class ParticleEffectData {
	/**
		CLIENT
		 Sets the sort origin for given particle effect system. This is used as a helper to determine which particles are in front of which.
	**/
	#if CLIENT @:native("setSortOrigin") public function setSortOrigin(vector:Any):Void;#end
	/**
		CLIENT
		 Restarts emission of the particle effect.
	**/
	#if CLIENT @:native("restart") public function restart():Void;#end
	/**
		CLIENT
		 Stops emission of the particle effect.
	**/
	#if CLIENT @:native("stopEmission") public function stopEmission():Void;#end
	/**
		CLIENT
		 Essentially makes child control point follow the parent entity.
	**/
	#if CLIENT @:native("setControlPointEntity") public function setControlPointEntity(number:Any, entity:Any):Void;#end
	/**
		CLIENT
		 Restarts emission of the particle effect.
	**/
	#if CLIENT @:native("isFinished") public function isFinished():Any;#end
	/**
		CLIENT
		 Sets the forward direction for given control point.
	**/
	#if CLIENT @:native("setControlPointParent") public function setControlPointParent(number:Any, number:Any):Void;#end
	/**
		CLIENT
		 Sets a value for given control point.
	**/
	#if CLIENT @:native("setControlPoint") public function setControlPoint(number:Any, vector:Any):Void;#end
	/**
		CLIENT
		 Sets the right direction for given control point.
	**/
	#if CLIENT @:native("setUpVector") public function setUpVector(number:Any, vector:Any):Void;#end
	/**
		CLIENT
		 Stops emission of the particle effect and destroys the object.
	**/
	#if CLIENT @:native("destroy") public function destroy():Void;#end
	/**
		CLIENT
		 Sets the forward direction for given control point.
	**/
	#if CLIENT @:native("setForwardVector") public function setForwardVector(number:Any, vector:Any):Void;#end
	/**
		CLIENT
		 Starts emission of the particle effect.
	**/
	#if CLIENT @:native("startEmission") public function startEmission():Void;#end
	/**
		CLIENT
		 Sets the right direction for given control point.
	**/
	#if CLIENT @:native("setRightVector") public function setRightVector(number:Any, vector:Any):Void;#end
	/**
		CLIENT
		 Gets if the particle effect is valid or not.
	**/
	#if CLIENT @:native("isValid") public function isValid():Any;#end
}

@:forward
extern abstract ParticleEffect(ParticleEffectData) {
}


// Generated by SFHaxe 0.3.3
package sf.type;
extern class HologramData extends sf.type.Entity.EntityData {
	/**
		CLIENT
		Manually draws a hologram, requires a 3d render context
	**/
	#if CLIENT @:native("draw") public function draw():Void;#end
	/**
		SHARED
		Removes engine effects from the hologram
	**/
	@:native("removeEffects") public function removeEffects(effect:Float):Void;
	/**
		SHARED
		Suppress Engine Lighting of a hologram. Disabled by default.
	**/
	@:native("suppressEngineLighting") public function suppressEngineLighting(suppress:Bool):Void;
	/**
		SHARED
		Sets the hologram size in game units
	**/
	@:native("setSize") public function setSize(size:sf.type.Vector):Void;
	/**
		SERVER
		Sets the hologram linear velocity
	**/
	#if SERVER @:native("setVel") public function setVel(vel:sf.type.Vector):Void;#end
	/**
		SHARED
		Animates a hologram
	**/
	@:native("setAnimation") public function setAnimation(animation:Dynamic, ?frame:Null<Float>, ?rate:Null<Float>):Void;
	/**
		SHARED
		Removes a hologram
	**/
	@:native("remove") public function remove():Void;
	/**
		CLIENT
		Sets a hologram entity's rendermatrix
	**/
	#if CLIENT @:native("setRenderMatrix") public function setRenderMatrix(mat:sf.type.VMatrix):Void;#end
	/**
		SHARED
		Applies engine effects to the hologram
	**/
	@:native("addEffects") public function addEffects(effect:Float):Void;
	/**
		SHARED
		Gets the hologram scale.
	**/
	@:native("getScale") public function getScale():sf.type.Vector;
	/**
		SERVER
		Sets the hologram's angular velocity.
	**/
	#if SERVER @:native("setAngVel") public function setAngVel(angvel:sf.type.Angle):Void;#end
	/**
		SHARED
		Sets the model of a hologram
	**/
	@:native("setModel") public function setModel(model:std.String):Void;
	/**
		SHARED
		Sets the hologram's angles.
	**/
	@:native("setAngles") public function setAngles(ang:sf.type.Angle):Void;
	/**
		CLIENT
		Sets the texture filtering function when viewing a far texture
	**/
	#if CLIENT @:native("setFilterMin") public function setFilterMin(val:Float):Void;#end
	/**
		SERVER
		Sets the hologram's movetype
	**/
	#if SERVER @:native("setMoveType") public function setMoveType(Movetype:Float):Void;#end
	/**
		SHARED
		Sets the hologram scale. Basically the same as setRenderMatrix() with a scaled matrix
	**/
	@:native("setScale") public function setScale(scale:sf.type.Vector):Void;
	/**
		SHARED
		Updates a clip plane
	**/
	@:native("setClip") public function setClip(index:Float, enabled:Bool, origin:sf.type.Vector, normal:sf.type.Vector, ?entity:Null<sf.type.Entity>):Void;
	/**
		SHARED
		Suppress Engine Lighting of a hologram. Disabled by default.
	**/
	@:native("getSuppressEngineLighting") public function getSuppressEngineLighting():Bool;
	/**
		SHARED
		Sets the hologram's position.
	**/
	@:native("setPos") public function setPos(vec:sf.type.Vector):Void;
	/**
		CLIENT
		Sets the texture filtering function when viewing a close texture
	**/
	#if CLIENT @:native("setFilterMag") public function setFilterMag(val:Float):Void;#end
}

@:forward
extern abstract Hologram(HologramData) {
}


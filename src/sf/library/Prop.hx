// Generated by SFHaxe 0.2.0
package sf.library;
@:native("prop") extern class Prop {
	/**
		SERVER
		 Returns how many props per second the user can spawn
	**/
	#if SERVER @:native("spawnRate") public static function spawnRate():Any;#end
	/**
		SERVER
		 Sets whether the props should be undo-able
	**/
	#if SERVER @:native("setPropUndo") public static function setPropUndo(on:Any):Void;#end
	/**
		SERVER
		 Creates a sent.
	**/
	#if SERVER @:native("createSent") public static function createSent(pos:Any, ang:Any, _class:Any, frozen:Any, data:Any):Any;#end
	/**
		SERVER
		 Creates a prop
	**/
	#if SERVER @:native("create") public static function create(pos:Any, ang:Any, model:Any, frozen:Any):Any;#end
	/**
		SERVER
		 Creates starfall component
		 Allowed components:
		 starfall_hud
		 starfall_screen
	**/
	#if SERVER @:native("createComponent") public static function createComponent(pos:Any, ang:Any, _class:Any, model:Any, frozen:Any):Any;#end
	/**
		SERVER
		 Checks how many props can be spawned
	**/
	#if SERVER @:native("propsLeft") public static function propsLeft():Any;#end
	/**
		SERVER
		 Creates a custom prop.
	**/
	#if SERVER @:native("createCustom") public static function createCustom(pos:Any, ang:Any, vertices:Any, frozen:Any):Any;#end
	/**
		SERVER
		 Sets whether the chip should remove created props when the chip is removed
	**/
	#if SERVER @:native("setPropClean") public static function setPropClean(on:Any):Void;#end
	/**
		SERVER
		 Checks if a user can spawn anymore props.
	**/
	#if SERVER @:native("canSpawn") public static function canSpawn():Any;#end
	/**
		SERVER
		 Get a list of all spawnable sents.
	**/
	#if SERVER @:native("getSpawnableSents") public static function getSpawnableSents(categorized:Any):Any;#end
	/**
		SERVER
		 Creates a ragdoll
	**/
	#if SERVER @:native("createRagdoll") public static function createRagdoll(model:Any, frozen:Any):Any;#end
}


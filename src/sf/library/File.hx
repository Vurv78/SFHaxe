// Generated by SFHaxe 0.2.0
package sf.library;
@:native("file") extern class File {
	/**
		CLIENT
		 Checks if a file exists
	**/
	#if CLIENT @:native("exists") public static function exists(path:Any):Any;#end
	/**
		CLIENT
		 Enumerates a directory
	**/
	#if CLIENT @:native("find") public static function find(path:Any, sorting:Any):Any;#end
	/**
		CLIENT
		 Writes to a file
	**/
	#if CLIENT @:native("write") public static function write(path:Any, data:Any):Any;#end
	/**
		CLIENT
		 Appends a string to the end of a file
	**/
	#if CLIENT @:native("append") public static function append(path:Any, data:Any):Void;#end
	/**
		CLIENT
		 Reads a file from path
	**/
	#if CLIENT @:native("read") public static function read(path:Any):Any;#end
	/**
		CLIENT
		 Writes a temporary file. Throws an error if it is unable to.
	**/
	#if CLIENT @:native("writeTemp") public static function writeTemp(filename:Any, data:Any):Any;#end
	/**
		CLIENT
		 Returns the path of a temp file if it exists. Otherwise returns nil
	**/
	#if CLIENT @:native("existsTemp") public static function existsTemp(filename:Any):Any;#end
	/**
		CLIENT
		 Opens and returns a file
	**/
	#if CLIENT @:native("open") public static function open(path:Any, mode:Any):Any;#end
	/**
		CLIENT
		 Deletes a file
	**/
	#if CLIENT @:native("delete") public static function delete(path:Any):Any;#end
	/**
		CLIENT
		 Creates a directory
	**/
	#if CLIENT @:native("createDir") public static function createDir(path:Any):Void;#end
	/**
		CLIENT
		 Reads a temp file's data if it exists. Otherwise returns nil
	**/
	#if CLIENT @:native("readTemp") public static function readTemp(filename:Any):Any;#end
	/**
		CLIENT
		 Enumerates a directory relative to gmod
	**/
	#if CLIENT @:native("findInGame") public static function findInGame(path:Any, sorting:Any):Any;#end
}


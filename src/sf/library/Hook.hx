// Generated by SFHaxe 0.3.2
package sf.library;
@:native("hook") extern class Hook {
	/**
		SHARED
		 Remove a hook
	**/
	@:native("remove") public static function remove(hookname:std.String, name:std.String):Void;
	/**
		SHARED
		 Run a hook remotely.
		 This will call the hook "remote" on either a specified entity or all instances on the server/client
	**/
	@:native("runRemote") public static function runRemote(?recipient:Null<sf.type.Entity>, payload:Dynamic):lua.Table<Dynamic,Dynamic>;
	/**
		SHARED
		 Sets a hook function
	**/
	@:native("add") public static function add(hookname:std.String, name:std.String, func:haxe.Constraints.Function):Void;
	/**
		SHARED
		 Run a hook and return the result
	**/
	@:native("run") public static function run(hookname:std.String, arguments:Dynamic):Dynamic;
}

